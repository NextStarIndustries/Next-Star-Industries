PART
{
	name = TDS22
	module = Part
	author = #autoLOC_NSI_1 NSI NSIRD
	MODEL
	{
		model = NSI/AeroSpaceDivision/Parts/Command/TDS22/TDS22
	}
	rescaleFactor = 1
	CrewCapacity = 3
	CoPOffset = 0.0, 0.0, 0.0
	CenterOfBuoyancy = 0.0, 0.0, 0.0
	CenterOfDisplacement = 0.0, 0.0, 0.0
	buoyancyUseSine = False
	buoyancy = 1.1
	CoLOffset = 0.0, 0.0, 0.0
	TechRequired = precisionEngineering
	entryCost = 300000
	cost = 3000000
	category = Pods
	subcategory = 0
	title =  #autoLOC_NSI_87
	manufacturer = #autoLOC_NSI_1
	description = #autoLOC_NSI_88
	attachRules = 0,0,1,1,0
	mass = 2
	dragModelType = default
	maximum_drag = 0.03
	minimum_drag = 0.02
	angularDrag = 2
	crashTolerance = 500
	maxTemp = 14400
	explosionPotential = 0.1
	vesselType = Ship
	emissiveConstant = 0.025	// Gold polished emissivity
	heatConductivity = 0.0001 //They have built in insulators
	bulkheadProfiles = size0
	MODULE
	{
		name = TDSControl
	}
	MODULE
	{
		name = ModuleCommand
		minimumCrew = 0
		hasHibernation = True
		Resource
		{
			name = ElectricCharge
			rate = 1.0
		}
	}
	MODULE
	{
		name = ModuleSAS
		SASServiceLevel = 3
	}
	MODULE
	{
		name = ModuleGenerator
		isAlwaysActive = true
		OUTPUT_RESOURCE
		{
			name = ElectricCharge
			rate = 10.0
		}
	}
	{
		name = ModuleActiveRadiator
		maxEnergyTransfer = 20000
		overcoolFactor = 0.25
		isCoreRadiator = true
		parentCoolingOnly = false
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.025
		}		
	}
	MODULE
	{
		name = ModuleColorChanger
		moduleID = shieldChar
		shaderProperty = _BurnColor
		useRate = False
		toggleInEditor = False
		toggleInFlight = False
		redCurve
		{
			key = 0 0
			key = 1 1
		}
		greenCurve
		{
			key = 0 0
			key = 1 1
		}
		blueCurve
		{
			key = 0 0
			key = 1 1
		}
		alphaCurve
		{
			key = 0 0.8
		}
	}
	MODULE
	{
		name = ModuleLiftingSurface
		useInternalDragModel = True
		deflectionLiftCoeff = 5 // 27,41m^2
		dragAtMaxAoA = 0.01
		dragAtMinAoA = 0.0
	}
	RESOURCE
	{
		name = ElectricCharge
		amount = 5000.0
		maxAmount = 5000.0
	}
	MODULE
	{
		name = ModuleReactionWheel
		PitchTorque = 30
		YawTorque = 30
		RollTorque = 30
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.005
		}
	}
	MODULE
	{
		name = ModuleKerbNetAccess
		MinimumFoV = 1
		MaximumFoV = 90
		AnomalyDetection = 0.25
		DISPLAY_MODES
		{
			Mode = Terrain
		}
	}
	MODULE
	{
		name = ModuleDataTransmitter
		antennaType = RELAY
		packetInterval = 0.35
		packetSize = 10
		packetResourceCost = 22.0
		requiredResource = ElectricCharge
		antennaPower = 100000000000000
		antennaCombinable = True
	}
	MODULE
	{
		name = ModuleConductionMultiplier
		modifiedConductionFactor = 0.003
		convectionFluxThreshold = 3000
	}
	MODULE
	{
		name = ModuleEnginesFX
		engineID = Main
		thrustVectorTransformName = thrustTransform
		exhaustDamage = False
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 500
		heatProduction = 0
		EngineType = Electric
		PROPELLANT
		{
			name = ElectricCharge
			ratio = 0.25
			DrawGauge = True
			minResToLeave = 0.01
		}
		atmosphereCurve
		{
			key = 0 42000
			key = 1 10000
			key = 1.2 0.001
		}
	}
	MODULE
	{
		name = ModuleEnginesFX
		engineID = Hover
		thrustVectorTransformName = hoverTransform
		exhaustDamage = False
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 500
		heatProduction = 0
		EngineType = Electric
		PROPELLANT
		{
			name = ElectricCharge
			ratio = 0.25
			DrawGauge = True
			minResToLeave = 0.01
		}
		atmosphereCurve
		{
			key = 0 42000
			key = 1 10000
			key = 1.2 0.001
		}
	}
	MODULE
	{
		name = RadarWarningReceiver	
	}
	MODULE
	{
		name = ModuleWeapon
		fireTransformName = fireTransform
		hasDeployAnim = false
		hasFireAnimation = false
		maxEffectiveDistance = 10000
		bulletMass = 5.40133e-5
		bulletVelocity = 860
		ammoName = ElectricCharge
		requestResourceAmount = 4
		weaponType = laser
		laserDamage = 1600
		tanAngle = 0.0001 //controls how quickly damage scales down with distance
		projectileColor = 255, 0, 255, 128 //RGBA 0-255
		tracerStartWidth = 0.3
		tracerEndWidth = 0.3
		maxHeat = 3600
		heatPerShot = 40
		heatLoss = 740
		fireSoundPath = BDArmory/Parts/ABL/sounds/laser
		chargeSoundPath = BDArmory/Parts/ABL/sounds/charge
		overheatSoundPath = BDArmory/Parts/50CalTurret/sounds/turretOverheat
	}
	MODULE
	{
        		name = ModuleRadar
        		// -- Section: General Configuration --
        		radarName = TDS22 Radar //if left empty part.title is used, but advised to set this to a nice printable text
        		rwrThreatType = 2 //IMPORTANT, please set correctly:
                                //0 = SAM site radar
                                //1 = Fighter radar (airborne)
                                //2 = AWACS radar (airborne)
                                //3, 4 = ACTIVE MISSILE (DO NOT USE UNLESS YOU KNOW WHAT YOU'RE DOING!
                                //5 = Detection radar (ground/ship based)
                                //6 = SONAR (ship/submarine based)
        		rotationTransformName = scanRotation
	    	turretID = 1 // if needed
        		resourceDrain = 0.8 //change to higher values for more capable radars, e.g AESA
        		// -- Section: Capabilities --
        		omnidirectional = true // false: boresight scan radar
        		directionalFieldOfView = 90 //for omni and boresight
        		//boresightFOV = 10 //for boresight only
        		scanRotationSpeed = 190 // degress per second
        		//lockRotationSpeed = 120 // only relevant if canLock
        		//lockRotationAngle = 4
        		showDirectionWhileScan = true // can show target direction on radar screen. False: radar echos displayed as block only (no direction)
        		//multiLockFOV = 30 // only relevant if canLock
        		//lockAttemptFOV = 2 // only relevant if canLock
        		maxLocks = 2 //how many targets can be locked/tracked simultaneously. only relevant if canLock
        		canScan = true // scanning/detecting targets (volume search)
        		canLock = true // locking/tracking targets (fire control)
        		canTrackWhileScan = true // continue scanning while tracking a locked target
        		canRecieveRadarData = true // can work as passive data receiver (NOTE THE SPELLING! [SIC])
        		minSignalThreshold = 300 // DEPRECATED, NO LONGER USED! use detection float curve!
        		minLockedSignalThreshold = 220 // DEPRECATED, NO LONGER USED! use locktrack float curve!
        		radarGroundClutterFactor = 0.1 // how much is the radar efficiency reduced to by ground clutter/look-down?
                                //0.0 = reduced to 0% (=IMPOSSIBLE to detect ground targets)
                                //1.0 = fully efficient (no difference between air & ground targets)
                                //default if unset: 0.25
                                //Ground targets, especially ships, already have a massively larger RCS than fighters, hence
                                //any ground clutter factor >0.25 is to be considered very good, making an efficient surface/horizon search radar.
                                //values >1.0 are possible, meaning the radar is MORE efficient during look down than vs air targets.
        		radarDetectionCurve
        		{
          			//floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
          			//this defines both min/max range of the radar, and sensitivity/efficiency
          			//it is recommended to define an "assured detection range", at which all craft are detected regardless
          			//of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
          			//key = distance rcs
                    		key = 5 0 //between 0 and 5 km the min cross section is 0, thus assured detection of everything
                    		key = 10 10 //
                    		key = 15 20 //
                    		key = 20 25 //this radar is NOT very good at detection (limited range, needs large rcs)
        		}
        		radarLockTrackCurve
        		{
            			//same as detectionCurve, just for locking/tracking purpose
            			//ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
            			//ECM-jammers & chaff completely ineffective!!
            			//key = distance rcs
                    		key = 0.0 0
                    		key = 5 5 //for tracking locks the radar is highly sensitive
                    		key = 10 7 //this radar is relatively  good at locking/tracking
                    		key = 15 15 //
                    		key = 20 20 // this radar is NOT very good at detection (limited range, needs large rcs)
        		}

	}
}